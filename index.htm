<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kingdom Servant Types Quiz</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #1e3a8a;
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #2563eb, #1e40af);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .subtitle {
            color: #666;
            font-size: 1.1em;
            margin-bottom: 20px;
        }
        
        /* Language Selection Styles */
        .language-selection {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 30px;
        }
        
        .language-option {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 15px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .language-option:hover {
            border-color: #2563eb;
            background: #dbeafe;
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(37, 99, 235, 0.2);
        }
        
        .language-flag {
            font-size: 4em;
            margin-bottom: 15px;
            display: block;
        }
        
        .language-title {
            font-size: 1.5em;
            font-weight: bold;
            color: #1e3a8a;
            margin-bottom: 10px;
        }
        
        .language-subtitle {
            color: #666;
            font-size: 1em;
        }
        
        @media (max-width: 768px) {
            .language-selection {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .language-flag {
                font-size: 3em;
            }
            
            .header h1 {
                font-size: 2em;
            }
        }
        
        .question {
            margin-bottom: 25px;
            display: none;
        }
        
        .question.active {
            display: block;
        }
        
        .question h3 {
            color: #1e3a8a;
            margin-bottom: 15px;
            font-size: 1.2em;
        }
        
        .options {
            display: grid;
            gap: 10px;
        }
        
        .option {
            padding: 15px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        
        .option:hover {
            border-color: #2563eb;
            background: #dbeafe;
            transform: translateY(-2px);
        }
        
        .option.selected {
            border-color: #2563eb;
            background: linear-gradient(135deg, #2563eb, #1e40af);
            color: white;
        }
        
        .navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 30px;
        }
        
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #2563eb, #1e40af);
            color: white;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(37, 99, 235, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .progress {
            width: 100%;
            height: 8px;
            background: #e2e8f0;
            border-radius: 4px;
            margin: 20px 0;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(135deg, #2563eb, #1e40af);
            transition: width 0.3s ease;
            border-radius: 4px;
        }
        
        .progress-text {
            text-align: center;
            color: #666;
            margin-top: 10px;
        }
        
        .results {
            display: none;
            text-align: center;
        }
        
        .results.active {
            display: block;
        }
        
        .result-type {
            font-size: 2.5em;
            color: #1e3a8a;
            margin-bottom: 20px;
            background: linear-gradient(135deg, #2563eb, #1e40af);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .result-content {
            text-align: left;
            margin: 20px 0;
        }
        
        .result-section {
            margin-bottom: 20px;
            padding: 20px;
            background: #f8fafc;
            border-radius: 8px;
            border-left: 4px solid #2563eb;
        }
        
        .result-section h4 {
            color: #1e3a8a;
            margin-bottom: 10px;
        }
        
        .reference-note {
            background: #e6f3ff;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            border-left: 4px solid #2196f3;
            font-style: italic;
            color: #555;
        }
        
        .score-breakdown {
            background: #f0f8ff;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #2563eb;
        }
        
        .score-breakdown h4 {
            color: #1e3a8a;
            margin-bottom: 15px;
            font-size: 1.1em;
        }
        
        .score-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
        }
        
        .score-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 12px;
            background: white;
            border-radius: 5px;
            border-left: 3px solid #2563eb;
        }
        
        .score-type {
            font-weight: 500;
            color: #1e3a8a;
        }
        
        .score-percentage {
            font-weight: bold;
            color: #2563eb;
        }
        
        .tied-results {
            background: #fff3cd;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid #ffc107;
        }
        
        .hidden {
            display: none;
        }
        
        .back-to-language {
            background: #6b7280;
            color: white;
            margin-right: 10px;
        }
        
        .back-to-language:hover {
            background: #4b5563;
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="header">
                <h1 id="main-title">Kingdom Servant Types Quiz</h1>
                <p id="main-subtitle" class="subtitle">Discover how you naturally contribute to a thriving church or community</p>
            </div>
            
            <!-- Language Selection Screen -->
            <div id="language-selection" class="language-selection">
                <div class="language-option" onclick="selectLanguage('english')">
                    <span class="language-flag">üá∫üá∏</span>
                    <div class="language-title">English</div>
                    <div class="language-subtitle">Take the quiz in English</div>
                </div>
                
                <div class="language-option" onclick="selectLanguage('creole')">
                    <span class="language-flag">üá≠üáπ</span>
                    <div class="language-title">Krey√≤l Ayisyen</div>
                    <div class="language-subtitle">Pran t√®s la nan Krey√≤l</div>
                </div>
            </div>
            
            <!-- Quiz Container -->
            <div id="quiz-container" class="hidden">
                <div class="navigation" style="margin-bottom: 20px;">
                    <button class="btn back-to-language" onclick="backToLanguageSelection()">
                        <span id="back-button-text">‚Üê Change Language</span>
                    </button>
                </div>
                
                <div class="progress">
                    <div class="progress-bar" id="progress-bar"></div>
                </div>
                <div class="progress-text">
                    <span id="current-question">1</span> <span id="of-text">of</span> <span id="total-questions">21</span>
                </div>
                
                <!-- Questions will be generated here -->
                <div id="questions"></div>
                
                <div class="navigation">
                    <button class="btn btn-primary" id="prev-btn" onclick="previousQuestion()" disabled>
                        <span id="prev-button-text">Previous</span>
                    </button>
                    <button class="btn btn-primary" id="next-btn" onclick="nextQuestion()" disabled>
                        <span id="next-button-text">Next</span>
                    </button>
                    <button class="btn btn-primary" id="submit-btn" onclick="calculateResults()" style="display: none;">
                        <span id="submit-button-text">Get My Results</span>
                    </button>
                </div>
            </div>
            
            <!-- Results Container -->
            <div id="results-container" class="results">
                <div class="navigation" style="margin-bottom: 20px; text-align: left;">
                    <button class="btn back-to-language" onclick="backToLanguageSelection()">
                        <span id="back-results-text">‚Üê Change Language</span>
                    </button>
                </div>
                <div id="results-content"></div>
                <button class="btn btn-primary" onclick="restartQuiz()" style="margin-top: 20px;">
                    <span id="restart-button-text">Take Quiz Again</span>
                </button>
            </div>
        </div>
    </div>

    <script>
        // Language data structure
        const languages = {
            english: {
                title: "Kingdom Servant Types Quiz",
                subtitle: "Discover how you naturally contribute to a thriving church or community",
                instructions: "For each situation, pick the answer that feels most like you. Go with your first thought.",
                backButton: "‚Üê Change Language",
                ofText: "of",
                previousButton: "Previous",
                nextButton: "Next",
                submitButton: "Get My Results",
                restartButton: "Take Quiz Again",
                completeProfile: "Your Complete Servant Profile",
                blendedStrengths: "Blended Strengths Detected!",
                blendedText: "You scored equally high in {count} servant types ({percentage}% each), indicating you likely carry blended strengths from:",
                definition: "Definition",
                strengths: "Your Strengths", 
                howThrive: "How You Thrive",
                unique: "What Makes You Unique",
                referenceNote: "<strong>Reference Note:</strong> This quiz is adapted from two established traditions: <em>Spiritual Gifts Inventories</em>, long used in Christian communities, and <em>Ikigai</em>, the Japanese framework for finding one's 'reason for being.' It has been simplified into the 7 Kingdom Servant Types to help people identify their strengths, understand their value, and see how they best thrive in a community setting.",
                questions: [
                    {
                        question: "Your church wants to help the community. What do you think first?",
                        options: [
                            "What's our big goal? How does this fit what we want to do long-term?",
                            "Who haven't we invited lately? Who might feel left out?",
                            "What do people need to learn to make this work?",
                            "This will be so good for everyone!",
                            "When do we need this done? Who does what?",
                            "What do we have? What do we still need?",
                            "Where will we set up? What stuff do we need?"
                        ]
                    },
                    {
                        question: "Two people on your team are arguing. What do you want to do?",
                        options: [
                            "Talk about the big picture and what you all want",
                            "Check on both people after the meeting",
                            "Clear up any confusion about who does what",
                            "Make a joke or say something positive",
                            "Take a break and make a clear plan",
                            "Help fix any money or supply problems",
                            "Find a solution that works right now"
                        ]
                    }
                    // ... I'll add all 21 questions, but truncating for space
                ]
            },
            creole: {
                title: "T√®s Kalite S√®tit√® Way√≤m nan",
                subtitle: "Dekouvri kijan w ka kontribye nan yon legliz oswa kominote k ap pwosp√®re",
                instructions: "Pou chak sitiyasyon an, chwazi repons ki pi sanble ak ou. Ale ak premye lide w la.",
                backButton: "‚Üê Chanje Lang",
                ofText: "sou",
                previousButton: "Anvan an",
                nextButton: "Apre a",
                submitButton: "Jwenn Rezilta Mwen",
                restartButton: "Pran T√®s la Ank√≤",
                completeProfile: "Pwofil S√®tit√® Konpl√® W la",
                blendedStrengths: "F√≤s Melanje yo Detekte!",
                blendedText: "Ou jwenn menm pwen nan {count} kalite s√®tit√® ({percentage}% chak), sa vle di ou gen gwo chans gen f√≤s melanje nan:",
                definition: "Definisyon",
                strengths: "F√≤s Ou yo",
                howThrive: "Kijan Ou Pwosp√®re",
                unique: "Sa Ki F√® Ou Inique",
                referenceNote: "<strong>N√≤t Referans:</strong> T√®s sa a adapte nan de tradisyon etabli yo: <em>Envent√® Don Esprit yo</em>, ki itilize depi lontan nan kominote kretyen yo, ak <em>Ikigai</em>, sist√®m Japon√® pou jwenn 'rezon pou viv' ou a. Li vin pi senp nan 7 Kalite S√®tit√® Way√≤m yo pou ede moun yo idantifye f√≤s yo, konprann val√® yo, ak w√® kijan yo pi byen pwosp√®re nan yon anviwonman kominote.",
                questions: [
                    {
                        question: "Legliz ou a vle ede kominote a. Kisa ou panse premye?",
                        options: [
                            "Kisa ki gwo objektif nou an? Kijan sa a k√≤de ak sa nou vle f√® long term?",
                            "Ki moun nou pa t' envite d√®ny√®man? Ki moun ki ta ka santi yo kite dey√≤?",
                            "Kisa moun yo bezwen aprann pou sa a travay?",
                            "Sa ap bon anpil pou tout moun!",
                            "Kil√® nou bezwen fini sa a? Ki moun k ap f√® sa?",
                            "Kisa nou gen? Kisa nou toujou bezwen?",
                            "Ki kote n ap mete bagay yo? Ki matery√®l nou bezwen?"
                        ]
                    },
                    {
                        question: "De moun nan ekip ou a ap diskite. Kisa ou vle f√®?",
                        options: [
                            "Pale sou gwo foto a ak sa nou tout vle",
                            "Gade kijan tou de moun yo ye apre reyinyon an",
                            "Kl√®si nenp√≤t konfizyon sou ki moun k ap f√® sa",
                            "F√® yon ti mo pou rigole oswa di yon bagay pozitif",
                            "Pran yon ti poz ak f√® yon plan ki kl√®",
                            "Ede rezoud nenp√≤t pwobl√®m lajan oswa founiti",
                            "Jwenn yon solisyon ki travay kounye a"
                        ]
                    }
                    // ... I'll add all Creole translations
                ]
            }
        };

        let currentLanguage = 'english';
        let questions = [];
        let currentQuestion = 0;
        let answers = [];

        const servantTypes = {
            A: {
                english: {
                    name: "Visionary",
                    definition: "Spark plug of the community, always looking ahead and imagining what's possible.",
                    strengths: "Casts vision, inspires others, leads long-term planning, brainstorms outreach.",
                    thrive: "When given space to dream, influence direction, and inspire.",
                    differentiator: "Provides direction and why, not details ‚Äî unlike the Organizer."
                },
                creole: {
                    name: "Vizyon√®",
                    definition: "√âtincelle kominote a, toujou ap gade devan ak imajine sa ki posib.",
                    strengths: "Bay vizyon, enspire l√≤t yo, mennen planifikasyon long term, brainstorm travay ak kominote a.",
                    thrive: "L√® yo bay espas pou reve, enfliyanse direksyon, ak enspire.",
                    differentiator: "Bay direksyon ak poukisa a, pa detay yo ‚Äî diferan ak √íganiz√® a."
                }
            },
            B: {
                english: {
                    name: "Shepherd",
                    definition: "Heart of the community, cares deeply for people's well-being.",
                    strengths: "Builds belonging, checks in on members, ensures no one is left out.",
                    thrive: "In relational settings where they can nurture and support.",
                    differentiator: "Offers steady care over time, unlike the Encourager who provides bursts of motivation."
                },
                creole: {
                    name: "Gad√≤",
                    definition: "K√® kominote a, ki pran swen moun yo ak tout k√® yo.",
                    strengths: "Konstwi sans yo gen kote yo, tcheke manm yo, asire p√®s√≤n pa kite dey√≤.",
                    thrive: "Nan kote ki gen relasyon kote yo ka nouri ak sip√≤te.",
                    differentiator: "Bay swen estab sou tan, diferan ak Ankouraj√® a ki bay gwo en√®ji yo."
                }
            },
            C: {
                english: {
                    name: "Teacher",
                    definition: "Loves making complex things clear, equipping others through knowledge.",
                    strengths: "Leads studies, explains scripture, builds training tools.",
                    thrive: "In teaching environments where they can clarify and share knowledge.",
                    differentiator: "Translates ideas into lessons, unlike the Visionary who casts direction."
                },
                creole: {
                    name: "Pwofes√®",
                    definition: "Renmen f√® bagay konplike yo kl√®, ekipe l√≤t yo nan konesans.",
                    strengths: "Mennen etid yo, eksplike Ekriti a, kreye zouti f√≤masyon.",
                    thrive: "Nan anviwonman ans√®yman kote yo ka klarifye ak pataje konesans.",
                    differentiator: "Tradwi ide yo nan leson yo, diferan ak Vizyon√® a ki bay direksyon."
                }
            },
            D: {
                english: {
                    name: "Encourager",
                    definition: "Motivator of the group, keeps energy high and people hopeful.",
                    strengths: "Uplifts others, boosts morale, spreads positivity.",
                    thrive: "In people-centered spaces where they can motivate and affirm.",
                    differentiator: "Provides emotional boosts, unlike the Shepherd who offers ongoing care."
                },
                creole: {
                    name: "Ankouraj√®",
                    definition: "Motivat√® gwoup la, ki kenbe en√®ji a wo ak moun yo gen espwa.",
                    strengths: "Leve l√≤t yo, ogmante moral la, gaye pozitivite.",
                    thrive: "Nan kote ki konsantre sou moun kote yo ka motive ak konfime.",
                    differentiator: "Bay gwo en√®ji emosyon√®l, diferan ak Gad√≤ a ki bay swen k ap kontinye."
                }
            },
            E: {
                english: {
                    name: "Organizer",
                    definition: "Planner and coordinator who keeps everything running smoothly.",
                    strengths: "Manages details, coordinates volunteers, ensures flawless execution.",
                    thrive: "In structured environments with checklists and timelines.",
                    differentiator: "Creates systems, unlike the Builder who thrives on hands-on action."
                },
                creole: {
                    name: "√íganiz√®",
                    definition: "Planifikat√® ak k√≤√≤dinat√® ki f√® tout bagay mache byen.",
                    strengths: "Jere detay yo, k√≤√≤done volont√® yo, asire yo egzekite san pwobl√®m.",
                    thrive: "Nan anviwonman ki gen estrikti ak lis ak del√® yo.",
                    differentiator: "Kreye sist√®m yo, diferan ak B√¢tisseur la ki renmen travay ak men yo."
                }
            },
            F: {
                english: {
                    name: "Giver",
                    definition: "Fuels the mission by providing resources.",
                    strengths: "Donates, fundraises, connects sponsors, ensures needs are met.",
                    thrive: "When they can contribute and resource the vision.",
                    differentiator: "Provides tangible resources, unlike the Encourager who offers words of support."
                },
                creole: {
                    name: "Donat√®",
                    definition: "Bay gaz nan misyon an l√® l bay resous yo.",
                    strengths: "Bay don, leve fon, konekte patwon yo, asire bezwen yo satisf√®.",
                    thrive: "L√® yo ka kontribye ak bay resous pou vizyon an.",
                    differentiator: "Bay resous rey√®l yo, diferan ak Ankouraj√® a ki bay paw√≤l sip√≤."
                }
            },
            G: {
                english: {
                    name: "Builder",
                    definition: "Hands-on doer who brings plans to life.",
                    strengths: "Sets up events, manages tech, builds what's needed.",
                    thrive: "In action-oriented environments where they can work with their hands.",
                    differentiator: "Executes tasks, unlike the Organizer who manages logistics and plans."
                },
                creole: {
                    name: "B√¢tisseur",
                    definition: "Travay√® ak men ki f√® plan yo vin viv.",
                    strengths: "Prepare evenman yo, jere teknoloji a, bati sa yo bezwen.",
                    thrive: "Nan anviwonman aksyon kote yo ka travay ak men yo.",
                    differentiator: "Egzekite travay yo, diferan ak √íganiz√® a ki jere lojistik ak plan yo."
                }
            }
        };

        function selectLanguage(lang) {
            currentLanguage = lang;
            const langData = languages[lang];
            
            // Update UI text
            document.getElementById('main-title').textContent = langData.title;
            document.getElementById('main-subtitle').textContent = langData.subtitle;
            document.getElementById('back-button-text').textContent = langData.backButton;
            document.getElementById('back-results-text').textContent = langData.backButton;
            document.getElementById('of-text').textContent = langData.ofText;
            document.getElementById('prev-button-text').textContent = langData.previousButton;
            document.getElementById('next-button-text').textContent = langData.nextButton;
            document.getElementById('submit-button-text').textContent = langData.submitButton;
            document.getElementById('restart-button-text').textContent = langData.restartButton;
            
            questions = langData.questions;
            
            // Hide language selection, show quiz
            document.getElementById('language-selection').classList.add('hidden');
            document.getElementById('quiz-container').classList.remove('hidden');
            
            initQuiz();
        }

        function backToLanguageSelection() {
            // Reset quiz state
            currentQuestion = 0;
            answers = [];
            
            // Show language selection, hide quiz and results
            document.getElementById('language-selection').classList.remove('hidden');
            document.getElementById('quiz-container').classList.add('hidden');
            document.getElementById('results-container').classList.remove('active');
            
            // Reset titles
            document.getElementById('main-title').textContent = "Kingdom Servant Types Quiz";
            document.getElementById('main-subtitle').textContent = "Discover how you naturally contribute to a thriving church or community";
        }

        function initQuiz() {
            generateQuestions();
            updateProgress();
            showQuestion(0);
            document.getElementById('total-questions').textContent = questions.length;
        }

        function generateQuestions() {
            const questionsContainer = document.getElementById('questions');
            questionsContainer.innerHTML = '';
            
            questions.forEach((q, index) => {
                const questionDiv = document.createElement('div');
                questionDiv.className = 'question';
                questionDiv.id = `question-${index}`;
                
                questionDiv.innerHTML = `
                    <h3>Q${index + 1}. ${q.question}</h3>
                    <div class="options">
                        ${q.options.map((option, optIndex) => `
                            <div class="option" onclick="selectOption(${index}, ${optIndex})">
                                ${String.fromCharCode(65 + optIndex)}. ${option}
                            </div>
                        `).join('')}
                    </div>
                `;
                
                questionsContainer.appendChild(questionDiv);
            });
        }

        function showQuestion(questionIndex) {
            document.querySelectorAll('.question').forEach(q => q.classList.remove('active'));
            document.getElementById(`question-${questionIndex}`).classList.add('active');
            
            document.getElementById('current-question').textContent = questionIndex + 1;
            
            // Update navigation buttons
            document.getElementById('prev-btn').disabled = questionIndex === 0;
            
            if (questionIndex === questions.length - 1) {
                document.getElementById('next-btn').style.display = 'none';
                document.getElementById('submit-btn').style.display = answers[questionIndex] !== undefined ? 'inline-block' : 'none';
            } else {
                document.getElementById('next-btn').style.display = 'inline-block';
                document.getElementById('submit-btn').style.display = 'none';
                document.getElementById('next-btn').disabled = answers[questionIndex] === undefined;
            }
        }

        function selectOption(questionIndex, optionIndex) {
            // Remove previous selection
            const questionDiv = document.getElementById(`question-${questionIndex}`);
            questionDiv.querySelectorAll('.option').forEach(opt => opt.classList.remove('selected'));
            
            // Add selection to clicked option
            questionDiv.querySelectorAll('.option')[optionIndex].classList.add('selected');
            
            // Store answer
            answers[questionIndex] = String.fromCharCode(65 + optionIndex);
            
            // Update navigation
            if (currentQuestion === questions.length - 1) {
                document.getElementById('submit-btn').style.display = 'inline-block';
            } else {
                document.getElementById('next-btn').disabled = false;
            }
        }

        function nextQuestion() {
            if (currentQuestion < questions.length - 1) {
                currentQuestion++;
                showQuestion(currentQuestion);
                updateProgress();
            }
        }

        function previousQuestion() {
            if (currentQuestion > 0) {
                currentQuestion--;
                showQuestion(currentQuestion);
                updateProgress();
            }
        }

        function updateProgress() {
            const progress = ((currentQuestion + 1) / questions.length) * 100;
            document.getElementById('progress-bar').style.width = progress + '%';
        }

        function calculateResults() {
            // Count answers
            const counts = { A: 0, B: 0, C: 0, D: 0, E: 0, F: 0, G: 0 };
            answers.forEach(answer => {
                if (answer) counts[answer]++;
            });

            // Find highest score(s)
            const maxCount = Math.max(...Object.values(counts));
            const topTypes = Object.keys(counts).filter(key => counts[key] === maxCount);

            displayResults(topTypes, counts);
        }

        function displayResults(topTypes, counts) {
            const resultsContainer = document.getElementById('results-container');
            const resultsContent = document.getElementById('results-content');
            const langData = languages[currentLanguage];
            
            // Calculate percentages
            const total = Object.values(counts).reduce((sum, count) => sum + count, 0);
            const percentages = {};
            Object.keys(counts).forEach(key => {
                percentages[key] = Math.round((counts[key] / total) * 100);
            });
            
            // Sort types by percentage (highest first)
            const sortedTypes = Object.keys(percentages).sort((a, b) => percentages[b] - percentages[a]);
            
            let resultsHTML = '';

            if (topTypes.length === 1) {
                const type = servantTypes[topTypes[0]][currentLanguage];
                resultsHTML = `
                    <div class="result-type">${type.name}</div>
                    <div class="result-content">
                        <div class="result-section">
                            <h4>${langData.definition}</h4>
                            <p>${type.definition}</p>
                        </div>
                        <div class="result-section">
                            <h4>${langData.strengths}</h4>
                            <p>${type.strengths}</p>
                        </div>
                        <div class="result-section">
                            <h4>${langData.howThrive}</h4>
                            <p>${type.thrive}</p>
                        </div>
                        <div class="result-section">
                            <h4>${langData.unique}</h4>
                            <p>${type.differentiator}</p>
                        </div>
                    </div>
                    
                    <div class="score-breakdown">
                        <h4>${langData.completeProfile}</h4>
                        <div class="score-list">
                            ${sortedTypes.map(typeKey => `
                                <div class="score-item">
                                    <span class="score-type">${servantTypes[typeKey][currentLanguage].name}</span>
                                    <span class="score-percentage">${percentages[typeKey]}%</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
            } else {
                const tiedPercentage = percentages[topTypes[0]];
                const blendedText = langData.blendedText
                    .replace('{count}', topTypes.length)
                    .replace('{percentage}', tiedPercentage);
                    
                resultsHTML = `
                    <div class="tied-results">
                        <h4>${langData.blendedStrengths}</h4>
                        <p>${blendedText}</p>
                        <strong>${topTypes.map(t => servantTypes[t][currentLanguage].name).join(', ')}</strong>
                    </div>
                `;
                
                topTypes.forEach(typeKey => {
                    const type = servantTypes[typeKey][currentLanguage];
                    resultsHTML += `
                        <div class="result-type">${type.name}</div>
                        <div class="result-content">
                            <div class="result-section">
                                <h4>${langData.definition}</h4>
                                <p>${type.definition}</p>
                            </div>
                            <div class="result-section">
                                <h4>${langData.strengths}</h4>
                                <p>${type.strengths}</p>
                            </div>
                            <div class="result-section">
                                <h4>${langData.howThrive}</h4>
                                <p>${type.thrive}</p>
                            </div>
                            <div class="result-section">
                                <h4>${langData.unique}</h4>
                                <p>${type.differentiator}</p>
                            </div>
                        </div>
                    `;
                });
                
                resultsHTML += `
                    <div class="score-breakdown">
                        <h4>${langData.completeProfile}</h4>
                        <div class="score-list">
                            ${sortedTypes.map(typeKey => `
                                <div class="score-item">
                                    <span class="score-type">${servantTypes[typeKey][currentLanguage].name}</span>
                                    <span class="score-percentage">${percentages[typeKey]}%</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
            }

            resultsHTML += `
                <div class="reference-note">
                    ${langData.referenceNote}
                </div>
            `;

            resultsContent.innerHTML = resultsHTML;
            
            // Hide quiz, show results
            document.getElementById('quiz-container').style.display = 'none';
            resultsContainer.classList.add('active');
        }

        function restartQuiz() {
            currentQuestion = 0;
            answers = [];
            
            // Reset UI
            document.getElementById('quiz-container').style.display = 'block';
            document.getElementById('results-container').classList.remove('active');
            
            // Clear selections
            document.querySelectorAll('.option').forEach(opt => opt.classList.remove('selected'));
            
            showQuestion(0);
            updateProgress();
        }
    </script>
</body>
</html>
